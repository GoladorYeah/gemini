services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8081:8081"
    depends_on:
      meilisearch:
        condition: service_started
      postgres:
        condition: service_started
      redis:
        condition: service_started

  parser:
    build:
      context: ./parser
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_started

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: geminidb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/internal/storage/init.sql:/docker-entrypoint-initdb.d/10-init.sql

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  meilisearch:
    image: getmeili/meilisearch
    restart: always
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data

volumes:
  postgres_data:
  redis_data:
  meili_data: